<?xml version="1.0" encoding="utf-8"?>
<manifest
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.ang.acb.personalpins">

<!--    <uses-permission android:name="android.permission.CAMERA"/>-->
<!--    <uses-permission android:name="android.permission.RECORD_AUDIO"/>-->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.INTERNET"/>

    <uses-feature android:name="android.hardware.camera2" />

    <application
        android:name=".PersonalPinsApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        tools:ignore="AllowBackup,GoogleAppIndexingWarning">

        <activity android:name=".ui.common.MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!--FileProvider is a special subclass of ContentProvider that facilitates secure
            sharing of files associated with an app by creating a content:// Uri for a file
            instead of a file:/// Uri. Unlike a file:/// Uri, a content URI allows you to
            grant read and write access using temporary access permissions.
            https://developer.android.com/reference/androidx/core/content/FileProvider
            https://github.com/android/camera-samples/tree/master/CameraXBasic -->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="${applicationId}.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <!-- Specify available file paths. -->
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>

        <!--  To create app widgets with collections you must declare the service
        in your manifest file with the permission BIND_REMOTEVIEWS. This prevents
        other applications from freely accessing your app widget's data.
        See: https://developer.android.com/guide/topics/appwidgets#manifest-for-app-widgets-with-collections-->
        <service
            android:name=".ui.widget.BoardRemoteViewsService"
            android:permission="android.permission.BIND_REMOTEVIEWS"/>

        <!-- Declaring an AppWidgetProvider in the Manifest.
         See: https://developer.android.com/guide/topics/appwidgets#Manifest-->
        <receiver
            android:name=".ui.widget.BoardWidgetProvider">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>
            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/pins_widget_info" />
        </receiver>

        <!--This meta-data tag is required to use Mobile Ads SDK.
            This step is required as of Google Mobile Ads SDK version 17.0.0.
            Failure to add this <meta-data> tag results in a crash with the message:
            "The Google Mobile Ads SDK was initialized incorrectly."-->
        <meta-data
            android:name="com.google.android.gms.ads.APPLICATION_ID"
            android:value="@string/ad_mob_app_id" />

        <!--Include the AdActivity configChanges and theme. -->
        <activity
            android:name="com.google.android.gms.ads.AdActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
            android:theme="@android:style/Theme.Translucent" />

    </application>

</manifest>